# Discord section
discord:
  # Discord token of the bot account to connect with.
  token: "token"
  # ID of the default Discord channel to send unbooking messages to.
  default_channel: "channel id"
  # Whether to print debug messages from the client.
  debug: false
  # Channels to allow booking commands from.
  acceptable_channels:
    - channel id
  # Discord IDs to send notifications to.
  notification_users:
    - user id

# TF2 log server section
log_server:
  # Address for the UDP server to bind to.
  log_address: 127.0.0.1
  # Address in which the UDP server will be accessible through.
  log_address_remote: 127.0.0.1
  # Port for the UDP server to bind to.
  log_port: 3001

# Booking section
booking:
  # Message to send to clients while kicking them.
  kick_message: "Server has been unbooked!"

  # Number of minutes that a server is allowed to be idle before unbooking.
  max_idle_minutes: 15
  # Number of players on the server for the server to be considered 'not idle'.
  min_players: 2

  # Amount of query errors before a notification is sent.
  error_threshold: 5

booking_api:
  # Booking bot will only use servers tagged with this tag.
  tag: "bookable"

  # Address of the Booking API.
  api_address: "127.0.0.1"

  # Port of the Booking API.
  api_port: 9902

  # Key used to authenticate to the Booking API.
  api_key: "example api key"

commands:
  # Delay between the !report command can be used.
  report_duration: "4m"

database:
  # DSN of PostgreSQL database.
  dsn: "user=tf2-booking dbname=tf2-booking host=localhost sslmode=disable password=example"

redis:
  address: "localhost:6379"
  password: "example"
  db: 0

tips:
  - "Did you know you can report a server by typing !report into ingame chat?"
  - "Did you know you can check the remaining time by typing !time into ingame chat?"
  - "Did you know you can extend your booking by typing 'extend' into Discord?"
  - "Use 'send password' in Discord to get the password for TF2Center lobbies!"
